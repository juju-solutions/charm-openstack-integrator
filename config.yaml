options:
  credentials:
    description: |
      The base64-encoded contents of a JSON file containing OpenStack credentials.

      The credentials must contain the following keys: auth-url, region, username,
      password, project-name, user-domain-name, and project-domain-name.

      It could also contain a base64-encoded CA certificate in endpoint-tls-ca key value.

      This can be used from bundles with 'include-base64://' (see
      https://jujucharms.com/docs/stable/charms-bundles#setting-charm-configurations-options-in-a-bundle),
      or from the command-line with 'juju config openstack-integrator credentials="$(base64 /path/to/file)"'.

      It is strongly recommended that you use 'juju trust' instead, if available.
    type: string
    default: ""
  auth-url:
    description: |
      The URL of the keystone API used to authenticate. On OpenStack control panels,
      this can be found at Access and Security > API Access > Credentials.
    type: string
    default: ""
  username:
    description: Username of a valid user set in keystone.
    type: string
    default: ""
  password:
    description: Password of a valid user set in keystone.
    type: string
    default: ""
  project-name:
    description: Name of project where you want to create your resources.
    type: string
    default: ""
  user-domain-name:
    description: Name of the user domain where you want to create your resources.
    type: string
    default: ""
  project-domain-name:
    description: Name of the project domain where you want to create your resources.
    type: string
    default: ""
  region:
    description: Name of the region where you want to create your resources.
    type: string
    default: ""
  endpoint-tls-ca:
    description: |
      A CA certificate that can be used to verify the target cloud API endpoints.
      Use 'include-base64://' in a bundle to include a certificate. Otherwise,
      pass a base64-encoded certificate (base64 of "-----BEGIN" to "-----END")
      as a config option in a Juju CLI invocation.
    type: string
    default: ""
  lb-subnet:
    description: |
      Override the subnet (name or ID) in which this charm will create load
      balancers for other charms related on the loadbalancer endpoint. If not
      set, the subnet over which the requesting application is related will be
      used.
    type: string
    default: ""
  lb-floating-network:
    description: |
      If set, this charm will assign a floating IP in this network (name or ID)
      for load balancers created for other charms related on the loadbalancer
      endpoint.
    type: string
    default: ""
  lb-port:
    description: |
      Port to use for load balancers created by this charm for other charms
      related on the loadbalancer endpoint.
    type: int
    default: 443
  subnet-id:
    description: |
      If set, it will be passed to integrated workloads to indicate in what
      subnet load balancers should be created. For example, this will determine
      what subnet Kubernetes uses for LoadBalancer type services in the
      cluster.
    type: string
    default: ""
  floating-network-id:
    description: |
      If set, it will be passed to integrated workloads to indicate that
      floating IPs should be created in the given network for load balancers
      that those workloads manage. For example, this will determine whether and
      where FIPs will be created by Kubernetes for LoadBalancer type services
      in the cluster.
    type: string
    default: ""
  lb-method:
    description: |
      Algorithm that will be used by load balancers, which must be one of:
      ROUND_ROBIN, LEAST_CONNECTIONS, SOURCE_IP. This applies both to load
      balancers managed by this charm for applications related via the
      loadbalancer endpoint, as well as to load balancers managed by integrated
      workloads, such as Kubernetes.
    type: string
    default: "ROUND_ROBIN"
  manage-security-groups:
    description: |
      Whether or not each load balancer should have its own security group, or
      if all load balancers should use the default security group for the
      project.  This applies both to load balancers managed by this charm for
      applications related via the loadbalancer endpoint, as well as to load
      balancers managed by integrated workloads, such as Kubernetes.
    type: boolean
    default: false
  bs-version:
    description: |
      Used to override automatic version detection for block storage usage.
      Valid values are v1, v2, v3 and auto. When auto is specified automatic
      detection will select the highest supported version exposed by the
      underlying OpenStack cloud. If not set, will use the upstream default.
    type: string
    default: null
  trust-device-path:
    description: |
      In most scenarios the block device names provided by Cinder (e.g.
      /dev/vda) can not be trusted. This boolean toggles this behavior. Setting
      it to true results in trusting the block device names provided by Cinder.
      The value of false results in the discovery of the device path
      based on its serial number and /dev/disk/by-id mapping and is the
      recommended approach.  If not set, will use the upstream default.
    type: boolean
    default: null
  ignore-volume-az:
    description: |
      Used to influence availability zone use when attaching Cinder volumes.
      When Nova and Cinder have different availability zones, this should be
      set to true. This is most commonly the case where there are many Nova
      availability zones but only one Cinder availability zone. If not set,
      will use the upstream default.
    type: boolean
    default: null
